#!/bin/bash
# Copyright Oleksandr Moskalenko, 2020+
# Research Computing, University of Florida

set -e
set -u
set -o pipefail

VERBOSE="0"
DEBUG="1"
exe="/apps/apptainer/latest/apptainer -qs exec -B /apps,/orange,/blue --nv /apps/ubuntu/20.04/container/ nvtop"
node_name=""
interval="5"
job_id=""
job_id_2=""
NOGRAPH="0"

function usage (){
    echo -e "\nUsage:"
    echo -e "\n\tjobnvtop [options] jobid"
    echo -e "\nOptions:"
    echo -e "\n\t-h, --help display this help message and exit"
    echo -e "\n\t-i, --interval=INTERVAL refresh interval, sec (default: 5sec)"
    echo -e "\n\t-n, --node=NODENAME show processes on a specific node in MPI job"
    echo -e "\n\t-g, --graph do not show the graph, only processes and stats"
}

function get_options (){
    while getopts "i:n:g-:h-:v-:d-" opt
    do
          case "$opt" in
            -)
                case "${OPTARG}" in
                    node)
                        node_name="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    ;;
                    node=*)
                        long_val=${OPTARG#*=}
                        long_opt=${OPTARG%=$long_val}
                        node_name="${long_val}"
                    ;;
                    help)
                        help_on="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                        usage
                        exit 0
                    ;;
                    interval)
                        interval="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    ;;
                    interval=*)
                        long_val=${OPTARG#*=}
                        long_opt=${OPTARG%=$long_val}
                        interval="${long_val}"
                    ;;
                    graph)
                        graph="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                        NOGRAPH="1"
                    ;;
                    *)
                        if [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ]; then
                            echo "Unknown option --${OPTARG}" >&2
                        fi
                    ;;
                esac;;
            h) usage
               exit 0
                ;;
            n) node_name="${OPTARG}"
                ;;
            i) interval="${OPTARG}"
                ;;
            g) NOGRAPH="1"
                ;;
            v) VERBOSE="1"
                ;;
            d) DEBUG="1"
                ;;
           \?) echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        esac
    done
}

function show_htop (){
    ssh ${node_name} -o LogLevel=QUIET -t "${exe} -d ${interval_val} ${nograph}"
}

################# Main #########################
if [[ $# -eq 0 ]]; then
    usage
    exit 0
fi

get_options "$@"

job_id=${@:$OPTIND:1}
job_id_2=${@:$OPTIND+1:1}

if [[ ! "x${job_id_2}" == "x" ]]; then
    echo -e "Only single jobid is accepted"
    exit 1
fi

echo -e "Showing GPU processes for job '${job_id}'"

if [[ x"${node_name}" == "x" ]]; then
     node_name=$(sstat -n "${job_id}" -o mincpunode | awk '{print $1}')
     if [[ x"${node_name}" == "x" ]]; then
         node_name=$(scontrol show jobid=11751879 | grep ' NodeList=' | awk -F= '{print $2}')
         if [[ x"${node_name}" == "x" ]]; then
            echo "ERROR: Cannot determine job node name! Abandon ship."
            exit 1
         fi
    fi
        if [[ $DEBUG == "1" ]]; then echo "Node name: ${node_name}"; fi
fi


interval_val=$(( 10*interval ))

nograph=''
if [[ "${NOGRAPH}" -eq 1 ]]; then
    nograph='-p'
fi

show_htop
